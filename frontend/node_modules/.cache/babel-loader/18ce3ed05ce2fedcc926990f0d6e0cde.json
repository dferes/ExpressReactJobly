{"ast":null,"code":"var _jsxFileName = \"/home/__NORI__/Documents/Springboard/43/react_jobly/jobly/src/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button, FormGroup, Label, Input } from 'reactstrap';\nimport { useHistory } from 'react-router-dom';\nimport JoblyApi from './api';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = ({\n  setUserToken\n}) => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    username: '',\n    password: ''\n  });\n  const [validCredentials, setValidCredentials] = useState(true);\n  const history = useHistory();\n\n  const handleLoginChange = evt => {\n    const {\n      name,\n      value\n    } = evt.target;\n    setFormData(data => ({ ...data,\n      [name]: value\n    }));\n  };\n\n  const handleLoginSubmit = async evt => {\n    evt.preventDefault();\n\n    try {\n      let token = await JoblyApi.logIn(formData.username, formData.password);\n      setUserToken(token);\n      history.push('/');\n    } catch (err) {\n      setValidCredentials(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-form-div\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"login-message\",\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      className: \"login-form\",\n      onSubmit: handleLoginSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          autoFocus: true,\n          type: \"text\",\n          name: \"username\",\n          id: \"username\",\n          value: formData.username,\n          onChange: handleLoginChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          name: \"password\",\n          id: \"password\",\n          value: formData.password,\n          onChange: handleLoginChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), !validCredentials && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bad-login-div\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"bad-login-message\",\n          children: \"Invalid username/password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        className: \"login-button\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"Iw83nvaR9DRGwfzzvRP1sHso4fQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/__NORI__/Documents/Springboard/43/react_jobly/jobly/src/Login.js"],"names":["React","useState","Form","Button","FormGroup","Label","Input","useHistory","JoblyApi","Login","setUserToken","formData","setFormData","username","password","validCredentials","setValidCredentials","history","handleLoginChange","evt","name","value","target","data","handleLoginSubmit","preventDefault","token","logIn","push","err"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Form, Button, FormGroup, Label, Input } from 'reactstrap';\nimport { useHistory } from 'react-router-dom';\nimport JoblyApi from './api';\nimport './Login.css';\n\n\nconst Login = ({ setUserToken  }) => {\n  const [ formData, setFormData ] = useState({ username: '', password: ''});\n  const [ validCredentials, setValidCredentials ] = useState(true);\n  const history = useHistory();\n\n\n  const handleLoginChange = evt => {\n    const { name, value } = evt.target;\n    setFormData( data => ({...data, [name]: value}));\n  };\n\n  const handleLoginSubmit = async evt => {\n    evt.preventDefault();\n    try {\n      let token = await JoblyApi.logIn(formData.username, formData.password);\n      setUserToken(token);\n      history.push('/');\n    }catch(err) {\n      setValidCredentials(false);\n    }\n\n  };\n\n  return (\n    <div className='login-form-div'>\n      <h2 className='login-message' >Log In</h2>  \n      <Form className='login-form' onSubmit={handleLoginSubmit}>\n        <FormGroup>\n          <Label for='username'>Username</Label>\n            <Input\n              autoFocus \n              type='text'\n              name='username'\n              id='username'\n              value={formData.username}\n              onChange={handleLoginChange}  \n            />\n        </FormGroup>\n        <FormGroup>\n          <Label for='password'>Password</Label>\n            <Input \n              type='password'\n              name='password'\n              id='password'\n              value={formData.password}\n              onChange={handleLoginChange}  \n            />\n        </FormGroup>\n        { !validCredentials && \n          <div className='bad-login-div'>\n            <p className='bad-login-message'>Invalid username/password</p>\n          </div>      \n        }\n        <Button color='primary' className='login-button'>Log In</Button>\n      </Form>\n    </div>  \n  );  \n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}