{"ast":null,"code":"var _jsxFileName = \"/home/__NORI__/Documents/Springboard/43/react_jobly/jobly/src/JobList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Job from './Job';\nimport useInputFilter from './hooks/useInputFilter';\nimport { Button } from 'reactstrap';\nimport './JobList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst JobList = ({\n  jobs,\n  isLoggedIn,\n  setJobAppyId\n}) => {\n  _s();\n\n  const history = useHistory();\n  console.log('isLoggedIn: ', isLoggedIn);\n  if (!isLoggedIn) history.push('/');\n  const [resultList, filter, handleChange, handleSubmit, isEmpty] = useInputFilter({\n    defaultList: jobs,\n    apiMethod: 'getAllJobs',\n    termKey: 'title'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-form-div\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"job-title-search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"job-title-search-input\",\n          id: \"job-title-search\",\n          name: \"title\",\n          placeholder: \"Enter a serch term...\",\n          value: filter.title,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"job-title-search-button\",\n          color: \"primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), !isEmpty && resultList.map(job => /*#__PURE__*/_jsxDEV(Job, {\n      id: job.id,\n      title: job.title,\n      companyHandle: job.companyHandle,\n      salary: job.salary,\n      equity: job.equity\n    }, job.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)), isEmpty && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-results-msg\",\n      children: \"Sorry, no results were found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(JobList, \"GZMJlFYpzpwwaInoaGbAJKrrRf0=\", false, function () {\n  return [useHistory, useInputFilter];\n});\n\n_c = JobList;\nexport default JobList;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobList\");","map":{"version":3,"sources":["/home/__NORI__/Documents/Springboard/43/react_jobly/jobly/src/JobList.js"],"names":["React","useHistory","Job","useInputFilter","Button","JobList","jobs","isLoggedIn","setJobAppyId","history","console","log","push","resultList","filter","handleChange","handleSubmit","isEmpty","defaultList","apiMethod","termKey","title","map","job","id","companyHandle","salary","equity"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,OAAO,eAAP;;;AAGA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,UAAR;AAAoBC,EAAAA;AAApB,CAAD,KAAwC;AAAA;;AACtD,QAAMC,OAAO,GAAGR,UAAU,EAA1B;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BJ,UAA5B;AACA,MAAG,CAACA,UAAJ,EAAgBE,OAAO,CAACG,IAAR,CAAa,GAAb;AAEhB,QAAM,CACJC,UADI,EAEJC,MAFI,EAGJC,YAHI,EAIJC,YAJI,EAKJC,OALI,IAMFd,cAAc,CAAC;AAAEe,IAAAA,WAAW,EAAEZ,IAAf;AAAqBa,IAAAA,SAAS,EAAE,YAAhC;AAA8CC,IAAAA,OAAO,EAAE;AAAvD,GAAD,CANlB;AAQA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAM,QAAA,QAAQ,EAAEJ,YAAhB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,SAAS,EAAC,wBADZ;AAEE,UAAA,EAAE,EAAC,kBAFL;AAGE,UAAA,IAAI,EAAC,OAHP;AAIE,UAAA,WAAW,EAAC,uBAJd;AAKE,UAAA,KAAK,EAAEF,MAAM,CAACO,KALhB;AAME,UAAA,QAAQ,EAAEN;AANZ;AAAA;AAAA;AAAA;AAAA,gBAFF,eAUE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,yBAAlB;AAA4C,UAAA,KAAK,EAAC,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAeI,CAACE,OAAD,IAAYJ,UAAU,CAACS,GAAX,CAAgBC,GAAG,iBAC/B,QAAC,GAAD;AAEE,MAAA,EAAE,EAAEA,GAAG,CAACC,EAFV;AAGE,MAAA,KAAK,EAAED,GAAG,CAACF,KAHb;AAIE,MAAA,aAAa,EAAEE,GAAG,CAACE,aAJrB;AAKE,MAAA,MAAM,EAAEF,GAAG,CAACG,MALd;AAME,MAAA,MAAM,EAAEH,GAAG,CAACI;AANd,OACOJ,GAAG,CAACC,EADX;AAAA;AAAA;AAAA;AAAA,YADY,CAfhB,EAyBIP,OAAO,iBAAI;AAAG,MAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBf;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CA1CD;;GAAMZ,O;UACYJ,U,EAUZE,c;;;KAXAE,O;AA4CN,eAAeA,OAAf","sourcesContent":["import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Job from './Job';\nimport useInputFilter from './hooks/useInputFilter';\nimport { Button } from 'reactstrap';\nimport './JobList.css';\n\n\nconst JobList = ({ jobs, isLoggedIn, setJobAppyId }) => {\n  const history = useHistory();\n  console.log('isLoggedIn: ', isLoggedIn);\n  if(!isLoggedIn) history.push('/');\n\n  const [ \n    resultList, \n    filter, \n    handleChange, \n    handleSubmit, \n    isEmpty \n  ] = useInputFilter({ defaultList: jobs, apiMethod: 'getAllJobs', termKey: 'title'} );\n\n  return (\n    <div>\n      <div className='job-form-div'>\n        <form onSubmit={handleSubmit}>\n          <label htmlFor='job-title-search' />\n          <input \n            className='job-title-search-input'\n            id='job-title-search'\n            name='title'\n            placeholder='Enter a serch term...'\n            value={filter.title}\n            onChange={handleChange}\n          />\n          <Button className='job-title-search-button' color='primary'>Submit</Button>    \n        </form>\n      </div>    \n      { !isEmpty && resultList.map( job => (\n        <Job \n          key={job.id}\n          id={job.id}\n          title={job.title}\n          companyHandle={job.companyHandle}\n          salary={job.salary}\n          equity={job.equity}\n        />\n      ))}\n      { isEmpty && <p className='no-results-msg'>Sorry, no results were found!</p> }  \n    </div>  \n  );\n};\n\nexport default JobList;"]},"metadata":{},"sourceType":"module"}