{"ast":null,"code":"var _jsxFileName = \"/home/__NORI__/Documents/Springboard/43/react_jobly/jobly/src/JobList.js\";\nimport React from 'react';\nimport './JobList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst JobList = ({\n  jobs\n}) => {\n  //   const [ formData, setFormData ] = useState({ name: ''});\n  //   const [ jobList, setJobList ] = useState(companies);\n  //   const [ isEmpty, setIsEmpty ] = useState(false);\n  //   const handleChange = evt => {\n  //     const { name, value } = evt.target;  \n  //     setFormData( data => ({...data, [name]: value}));\n  //   };\n  //   const handleSubmit = async evt => {\n  //     evt.preventDefault();  \n  //     const res = formData.name !== '' ?\n  //       await JoblyApi.getAllCompanies(formData)\n  //       : companies;\n  //     setIsEmpty( res.length === 0 ? true: false); \n  //     setCompanyList(res);\n  //   };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: jobs.map(job => /*#__PURE__*/_jsxDEV(Job, {}, job.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_c = JobList;\nexport default JobList;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobList\");","map":{"version":3,"sources":["/home/__NORI__/Documents/Springboard/43/react_jobly/jobly/src/JobList.js"],"names":["React","JobList","jobs","map","job","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;;;AAGA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAE9B;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE,sBACE;AAAA,cACGA,IAAI,CAACC,GAAL,CAAUC,GAAG,iBACZ,QAAC,GAAD,MAAUA,GAAG,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA3BD;;KAAMJ,O;AA6BN,eAAeA,OAAf","sourcesContent":["import React from 'react';\nimport './JobList.css';\n\n\nconst JobList = ({ jobs }) => {\n\n//   const [ formData, setFormData ] = useState({ name: ''});\n//   const [ jobList, setJobList ] = useState(companies);\n//   const [ isEmpty, setIsEmpty ] = useState(false);\n    \n//   const handleChange = evt => {\n//     const { name, value } = evt.target;  \n//     setFormData( data => ({...data, [name]: value}));\n//   };\n  \n//   const handleSubmit = async evt => {\n//     evt.preventDefault();  \n//     const res = formData.name !== '' ?\n//       await JoblyApi.getAllCompanies(formData)\n//       : companies;\n//     setIsEmpty( res.length === 0 ? true: false); \n//     setCompanyList(res);\n//   };\n\n  return (\n    <div>\n      {jobs.map( job => (\n        <Job key={job.id}/>\n      ))}  \n    </div>  \n  );\n};\n\nexport default JobList;"]},"metadata":{},"sourceType":"module"}