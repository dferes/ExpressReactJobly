{"ast":null,"code":"var _jsxFileName = \"/home/__NORI__/Documents/Springboard/43/react_jobly/jobly/src/CompanyList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './CompanyList.css';\nimport { Button } from 'reactstrap';\nimport Company from './Company';\nimport { useHistory } from 'react-router-dom';\nimport useInputFilter from './hooks/useInputFilter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CompanyList = ({\n  companies,\n  isLoggedIn\n}) => {\n  _s();\n\n  const history = useHistory();\n  console.log('isLoggedIn: ', isLoggedIn);\n  if (!isLoggedIn) history.push('/');\n  const [resultList, filter, handleChange, handleSubmit, isEmpty] = useInputFilter({\n    defaultList: companies,\n    apiMethod: 'getAllCompanies',\n    termKey: 'name'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-div\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"company-name-search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"company-name-search-input\",\n          id: \"company-name-search\",\n          name: \"name\",\n          placeholder: \"Enter a serch term...\",\n          value: filter.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"company-name-search-button\",\n          color: \"primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), !isEmpty && resultList.map(comp => /*#__PURE__*/_jsxDEV(Company, {\n      handle: comp.handle,\n      name: comp.handle,\n      description: comp.description,\n      logoUrl: comp.logoUrl\n    }, comp.handle, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)), isEmpty && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-results-msg\",\n      children: \"Sorry, no results were found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CompanyList, \"GZMJlFYpzpwwaInoaGbAJKrrRf0=\", false, function () {\n  return [useHistory, useInputFilter];\n});\n\n_c = CompanyList;\nexport default CompanyList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompanyList\");","map":{"version":3,"sources":["/home/__NORI__/Documents/Springboard/43/react_jobly/jobly/src/CompanyList.js"],"names":["React","Button","Company","useHistory","useInputFilter","CompanyList","companies","isLoggedIn","history","console","log","push","resultList","filter","handleChange","handleSubmit","isEmpty","defaultList","apiMethod","termKey","name","map","comp","handle","description","logoUrl"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,wBAA3B;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA+B;AAAA;;AACjD,QAAMC,OAAO,GAAGL,UAAU,EAA1B;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BH,UAA5B;AACA,MAAG,CAACA,UAAJ,EAAgBC,OAAO,CAACG,IAAR,CAAa,GAAb;AAEhB,QAAM,CACJC,UADI,EAEJC,MAFI,EAGJC,YAHI,EAIJC,YAJI,EAKJC,OALI,IAMFZ,cAAc,CAAC;AAAEa,IAAAA,WAAW,EAAEX,SAAf;AAA0BY,IAAAA,SAAS,EAAE,iBAArC;AAAwDC,IAAAA,OAAO,EAAE;AAAjE,GAAD,CANlB;AAQA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE;AAAM,QAAA,QAAQ,EAAEJ,YAAhB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,SAAS,EAAC,2BADZ;AAEE,UAAA,EAAE,EAAC,qBAFL;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,WAAW,EAAC,uBAJd;AAKE,UAAA,KAAK,EAAEF,MAAM,CAACO,IALhB;AAME,UAAA,QAAQ,EAAEN;AANZ;AAAA;AAAA;AAAA;AAAA,gBAFF,eAUE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,4BAAlB;AAA+C,UAAA,KAAK,EAAC,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAeI,CAACE,OAAD,IAAYJ,UAAU,CAACS,GAAX,CAAgBC,IAAI,iBAChC,QAAC,OAAD;AAEE,MAAA,MAAM,EAAEA,IAAI,CAACC,MAFf;AAGE,MAAA,IAAI,EAAED,IAAI,CAACC,MAHb;AAIE,MAAA,WAAW,EAAED,IAAI,CAACE,WAJpB;AAKE,MAAA,OAAO,EAAEF,IAAI,CAACG;AALhB,OACOH,IAAI,CAACC,MADZ;AAAA;AAAA;AAAA;AAAA,YADY,CAfhB,EAwBIP,OAAO,iBAAI;AAAG,MAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBf;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CAzCD;;GAAMX,W;UACYF,U,EAUZC,c;;;KAXAC,W;AA2CN,eAAeA,WAAf","sourcesContent":["import React from 'react';\nimport './CompanyList.css';\nimport { Button } from 'reactstrap';\nimport Company from './Company';\nimport { useHistory } from 'react-router-dom';\nimport useInputFilter from './hooks/useInputFilter';\n\nconst CompanyList = ({ companies, isLoggedIn }) => {\n  const history = useHistory();\n  console.log('isLoggedIn: ', isLoggedIn);\n  if(!isLoggedIn) history.push('/');\n  \n  const [ \n    resultList, \n    filter, \n    handleChange, \n    handleSubmit, \n    isEmpty \n  ] = useInputFilter({ defaultList: companies, apiMethod: 'getAllCompanies', termKey: 'name'} );\n  \n  return (  \n    <div>\n      <div className='form-div'>\n        <form onSubmit={handleSubmit}>\n          <label htmlFor='company-name-search' />\n          <input \n            className='company-name-search-input'\n            id='company-name-search'\n            name='name'\n            placeholder='Enter a serch term...'\n            value={filter.name}\n            onChange={handleChange}\n          />\n          <Button className='company-name-search-button' color='primary'>Submit</Button>    \n        </form>\n      </div>  \n      { !isEmpty && resultList.map( comp => (\n        <Company \n          key={comp.handle}\n          handle={comp.handle}\n          name={comp.handle}\n          description={comp.description}  \n          logoUrl={comp.logoUrl}\n        /> \n      ))}  \n      { isEmpty && <p className='no-results-msg'>Sorry, no results were found!</p> }\n    </div>  \n  );\n};\n\nexport default CompanyList;"]},"metadata":{},"sourceType":"module"}