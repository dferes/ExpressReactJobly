{"ast":null,"code":"var _jsxFileName = \"/home/__NORI__/Documents/Springboard/43/react_jobly/jobly/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport NavBar from './NavBar';\nimport Routes from './Routes';\nimport JoblyApi from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [companies, setCompanies] = useState([]);\n  const [jobs, setJobs] = useState([]);\n  const [userToken, setUserToken] = useState('');\n  const [user, setUser] = useState({\n    username: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    isAdmin: '',\n    applications: []\n  });\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  console.log('USER INFO: ', user);\n  useEffect(() => {\n    const getCompanies = async () => {\n      const allCompanies = await JoblyApi.getAllCompanies();\n      setCompanies(allCompanies);\n    };\n\n    const getJobs = async () => {\n      const allJobs = await JoblyApi.getAllJobs();\n      setJobs(allJobs);\n    };\n\n    getCompanies();\n    getJobs();\n  }, []);\n  useEffect(() => {\n    const logout = () => {\n      setUserToken('');\n      setUser({\n        username: '',\n        firstName: '',\n        lastName: '',\n        email: '',\n        isAdmin: '',\n        applications: []\n      });\n    };\n\n    if (!isLoggedIn) logout();\n  }, [isLoggedIn]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        userToken: userToken,\n        setIsLoggedIn: setIsLoggedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          companies: companies,\n          jobs: jobs,\n          userToken: userToken,\n          setUserToken: setUserToken,\n          setIsLoggedIn: setIsLoggedIn,\n          setUser: setUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"oDugEAW46qgxv89vyx0hwcGXCDU=\");\n\n_c = App;\n;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/__NORI__/Documents/Springboard/43/react_jobly/jobly/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","NavBar","Routes","JoblyApi","App","companies","setCompanies","jobs","setJobs","userToken","setUserToken","user","setUser","username","firstName","lastName","email","isAdmin","applications","isLoggedIn","setIsLoggedIn","console","log","getCompanies","allCompanies","getAllCompanies","getJobs","allJobs","getAllJobs","logout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAO,WAAP;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,OAArB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAAEC,SAAF,EAAaC,YAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAES,IAAF,EAAQC,OAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAEW,SAAF,EAAaC,YAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAEa,IAAF,EAAQC,OAAR,IAAoBd,QAAQ,CAAC;AAACe,IAAAA,QAAQ,EAAE,EAAX;AAAeC,IAAAA,SAAS,EAAE,EAA1B;AAA8BC,IAAAA,QAAQ,EAAE,EAAxC;AAA4CC,IAAAA,KAAK,EAAE,EAAnD;AAAuDC,IAAAA,OAAO,EAAE,EAAhE;AAAoEC,IAAAA,YAAY,EAAE;AAAlF,GAAD,CAAlC;AACA,QAAM,CAAEC,UAAF,EAAcC,aAAd,IAAgCtB,QAAQ,CAAC,KAAD,CAA9C;AAEAuB,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BX,IAA3B;AAEAZ,EAAAA,SAAS,CAAE,MAAM;AACf,UAAMwB,YAAY,GAAG,YAAY;AAC/B,YAAMC,YAAY,GAAG,MAAMrB,QAAQ,CAACsB,eAAT,EAA3B;AACAnB,MAAAA,YAAY,CAACkB,YAAD,CAAZ;AACD,KAHD;;AAKA,UAAME,OAAO,GAAG,YAAY;AAC1B,YAAMC,OAAO,GAAG,MAAMxB,QAAQ,CAACyB,UAAT,EAAtB;AACApB,MAAAA,OAAO,CAACmB,OAAD,CAAP;AACD,KAHD;;AAKAJ,IAAAA,YAAY;AACZG,IAAAA,OAAO;AACR,GAbQ,EAaN,EAbM,CAAT;AAgBA3B,EAAAA,SAAS,CAAE,MAAM;AACf,UAAM8B,MAAM,GAAG,MAAM;AACnBnB,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,MAAAA,OAAO,CAAC;AAACC,QAAAA,QAAQ,EAAC,EAAV;AAAcC,QAAAA,SAAS,EAAC,EAAxB;AAA4BC,QAAAA,QAAQ,EAAC,EAArC;AAAyCC,QAAAA,KAAK,EAAC,EAA/C;AAAmDC,QAAAA,OAAO,EAAC,EAA3D;AAA+DC,QAAAA,YAAY,EAAC;AAA5E,OAAD,CAAP;AACD,KAHD;;AAKA,QAAI,CAACC,UAAL,EAAiBU,MAAM;AAExB,GARQ,EAQN,CAACV,UAAD,CARM,CAAT;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,aAAD;AAAA,8BACE,QAAC,MAAD;AACE,QAAA,SAAS,EAAEV,SADb;AAEE,QAAA,aAAa,EAAEW;AAFjB;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,SAAS,EAAEf,SADb;AAEE,UAAA,IAAI,EAAEE,IAFR;AAGE,UAAA,SAAS,EAAEE,SAHb;AAIE,UAAA,YAAY,EAAEC,YAJhB;AAKE,UAAA,aAAa,EAAEU,aALjB;AAME,UAAA,OAAO,EAAER;AANX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAvDQR,G;;KAAAA,G;AAuDR;AAED,eAAeA,GAAf","sourcesContent":["import React, { useState , useEffect } from 'react';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport NavBar from './NavBar';\nimport Routes from './Routes';\nimport JoblyApi from './api';\n\nfunction App() {\n  const [ companies, setCompanies ] = useState([]);\n  const [ jobs, setJobs ] = useState([]);\n  const [ userToken, setUserToken ] = useState('');\n  const [ user, setUser ] = useState({username: '', firstName: '', lastName: '', email: '', isAdmin: '', applications: []});\n  const [ isLoggedIn, setIsLoggedIn ] = useState(false);\n\n  console.log('USER INFO: ', user);\n  \n  useEffect( () => {\n    const getCompanies = async () => {\n      const allCompanies = await JoblyApi.getAllCompanies();\n      setCompanies(allCompanies);\n    }\n\n    const getJobs = async () => {\n      const allJobs = await JoblyApi.getAllJobs();\n      setJobs(allJobs);\n    }\n\n    getCompanies();\n    getJobs();\n  }, []);\n\n\n  useEffect( () => {\n    const logout = () => {\n      setUserToken('');\n      setUser({username:'', firstName:'', lastName:'', email:'', isAdmin:'', applications:[]});\n    };\n    \n    if (!isLoggedIn) logout();\n\n  }, [isLoggedIn]);\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <NavBar \n          userToken={userToken} \n          setIsLoggedIn={setIsLoggedIn} \n        />\n        <main>\n          <Routes \n            companies={companies} \n            jobs={jobs} \n            userToken={userToken}\n            setUserToken={setUserToken}\n            setIsLoggedIn={setIsLoggedIn}\n            setUser={setUser} \n          />\n        </main>\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}