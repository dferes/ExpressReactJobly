{"ast":null,"code":"var _jsxFileName = \"/home/__NORI__/Documents/Springboard/43/react_jobly/jobly/src/CompanyDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Job from './Job';\nimport { useParams } from 'react-router-dom';\nimport JoblyApi from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CompanyDetails = () => {\n  _s();\n\n  const [company, setCompany] = useState({});\n  const [readyToRender, setReadyToRender] = useState(false);\n  const {\n    handle\n  } = useParams();\n  useEffect(async () => {\n    const getCompanyJobs = async () => {\n      const company = await JoblyApi.getCompany(handle);\n      setCompany(company);\n      setReadyToRender(true);\n    };\n\n    getCompanyJobs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"company-jobs-div\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"company-details-div\",\n      children: readyToRender && /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"company-details-title\",\n        children: company.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), readyToRender && company.jobs.map(job => /*#__PURE__*/_jsxDEV(Job, {\n      id: job.id,\n      title: job.title,\n      companyHandle: job.companyHandle,\n      salary: job.salary,\n      equity: job.equity\n    }, job.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CompanyDetails, \"dQLpsbQPwTuq6zrifzmLfJh0dl8=\", false, function () {\n  return [useParams];\n});\n\n_c = CompanyDetails;\nexport default CompanyDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompanyDetails\");","map":{"version":3,"sources":["/home/__NORI__/Documents/Springboard/43/react_jobly/jobly/src/CompanyDetails.js"],"names":["React","useEffect","useState","Job","useParams","JoblyApi","CompanyDetails","company","setCompany","readyToRender","setReadyToRender","handle","getCompanyJobs","getCompany","name","jobs","map","job","id","title","companyHandle","salary","equity"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,QAAP,MAAqB,OAArB;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAEO,aAAF,EAAiBC,gBAAjB,IAAsCR,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM;AAAES,IAAAA;AAAF,MAAaP,SAAS,EAA5B;AAEAH,EAAAA,SAAS,CAAE,YAAY;AACrB,UAAMW,cAAc,GAAG,YAAY;AACjC,YAAML,OAAO,GAAG,MAAMF,QAAQ,CAACQ,UAAT,CAAoBF,MAApB,CAAtB;AACAH,MAAAA,UAAU,CAACD,OAAD,CAAV;AACAG,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,KAJD;;AAMAE,IAAAA,cAAc;AACf,GARQ,EAQN,EARM,CAAT;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,gBACIH,aAAa,iBACb;AAAI,QAAA,SAAS,EAAC,uBAAd;AAAA,kBAAuCF,OAAO,CAACO;AAA/C;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YADF,EAMIL,aAAa,IAAIF,OAAO,CAACQ,IAAR,CAAaC,GAAb,CAAkBC,GAAG,iBACtC,QAAC,GAAD;AAEE,MAAA,EAAE,EAAEA,GAAG,CAACC,EAFV;AAGE,MAAA,KAAK,EAAED,GAAG,CAACE,KAHb;AAIE,MAAA,aAAa,EAAEF,GAAG,CAACG,aAJrB;AAKE,MAAA,MAAM,EAAEH,GAAG,CAACI,MALd;AAME,MAAA,MAAM,EAAEJ,GAAG,CAACK;AANd,OACOL,GAAG,CAACC,EADX;AAAA;AAAA;AAAA;AAAA,YADiB,CANrB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAnCD;;GAAMZ,c;UAGeF,S;;;KAHfE,c;AAqCN,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Job from './Job';\nimport { useParams } from 'react-router-dom';\nimport JoblyApi from './api';\n\nconst CompanyDetails = () => {\n  const [ company, setCompany ] = useState({});\n  const [ readyToRender, setReadyToRender ] = useState(false);\n  const { handle } = useParams();\n  \n  useEffect( async () => {\n    const getCompanyJobs = async () => {\n      const company = await JoblyApi.getCompany(handle);\n      setCompany(company);\n      setReadyToRender(true);\n    };\n    \n    getCompanyJobs();\n  }, []);\n  \n\n  return (\n    <div className='company-jobs-div'>\n      <div className='company-details-div'>\n        { readyToRender && \n          <h4 className='company-details-title'>{company.name}</h4>\n        }  \n      </div>\n      { readyToRender && company.jobs.map( job => (\n        <Job \n          key={job.id}\n          id={job.id}\n          title={job.title}\n          companyHandle={job.companyHandle}\n          salary={job.salary}\n          equity={job.equity}\n        />  \n      ))}\n    </div>\n  );  \n};\n\nexport default CompanyDetails;"]},"metadata":{},"sourceType":"module"}