{"ast":null,"code":"var _jsxFileName = \"/home/__NORI__/Documents/Springboard/43/react_jobly/jobly/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport NavBar from './NavBar';\nimport Routes from './Routes';\nimport JoblyApi from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [companies, setCompanies] = useState([]);\n  const [jobs, setJobs] = useState([]);\n  const emptyUserData = {\n    username: '',\n    hashedPassword: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    isAdmin: ''\n  };\n  const [userToken, setUserToken] = useState('');\n  const [user, setUser] = useState(emptyUserData);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const getCompanies = async () => {\n      const allCompanies = await JoblyApi.getAllCompanies();\n      setCompanies(allCompanies);\n    };\n\n    const getJobs = async () => {\n      const allJobs = await JoblyApi.getAllJobs();\n      setJobs(allJobs);\n    };\n\n    getCompanies();\n    getJobs();\n  }, []);\n  useEffect(() => {\n    const logout = () => {\n      setUserToken('');\n      setUser(emptyUserData);\n    };\n\n    if (isLoggedIn) logout();\n  }, [isLoggedIn]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        userToken: userToken\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          companies: companies,\n          jobs: jobs,\n          userToken: userToken,\n          setUserToken: setUserToken,\n          setIsLoggedIn: setIsLoggedIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"SmRsxTrGMd2aVnYN61XyCd057Is=\");\n\n_c = App;\n;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/__NORI__/Documents/Springboard/43/react_jobly/jobly/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","NavBar","Routes","JoblyApi","App","companies","setCompanies","jobs","setJobs","emptyUserData","username","hashedPassword","firstName","lastName","email","isAdmin","userToken","setUserToken","user","setUser","isLoggedIn","setIsLoggedIn","getCompanies","allCompanies","getAllCompanies","getJobs","allJobs","getAllJobs","logout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAO,WAAP;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,OAArB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAAEC,SAAF,EAAaC,YAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAES,IAAF,EAAQC,OAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMW,aAAa,GAAG;AAAEC,IAAAA,QAAQ,EAAE,EAAZ;AAAgBC,IAAAA,cAAc,EAAE,EAAhC;AAAoCC,IAAAA,SAAS,EAAE,EAA/C;AAAmDC,IAAAA,QAAQ,EAAE,EAA7D;AAAiEC,IAAAA,KAAK,EAAE,EAAxE;AAA4EC,IAAAA,OAAO,EAAE;AAArF,GAAtB;AACA,QAAM,CAAEC,SAAF,EAAaC,YAAb,IAA8BnB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAEoB,IAAF,EAAQC,OAAR,IAAoBrB,QAAQ,CAACW,aAAD,CAAlC;AACA,QAAM,CAAEW,UAAF,EAAcC,aAAd,IAAgCvB,QAAQ,CAAC,KAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAE,MAAM;AACf,UAAMuB,YAAY,GAAG,YAAY;AAC/B,YAAMC,YAAY,GAAG,MAAMpB,QAAQ,CAACqB,eAAT,EAA3B;AACAlB,MAAAA,YAAY,CAACiB,YAAD,CAAZ;AACD,KAHD;;AAKA,UAAME,OAAO,GAAG,YAAY;AAC1B,YAAMC,OAAO,GAAG,MAAMvB,QAAQ,CAACwB,UAAT,EAAtB;AACAnB,MAAAA,OAAO,CAACkB,OAAD,CAAP;AACD,KAHD;;AAKAJ,IAAAA,YAAY;AACZG,IAAAA,OAAO;AACR,GAbQ,EAaN,EAbM,CAAT;AAeA1B,EAAAA,SAAS,CAAE,MAAM;AACf,UAAM6B,MAAM,GAAG,MAAM;AACnBX,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,MAAAA,OAAO,CAACV,aAAD,CAAP;AACD,KAHD;;AAKA,QAAIW,UAAJ,EAAgBQ,MAAM;AACvB,GAPQ,EAON,CAACR,UAAD,CAPM,CAAT;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,aAAD;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAEJ;AAAnB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,SAAS,EAAEX,SADb;AAEE,UAAA,IAAI,EAAEE,IAFR;AAGE,UAAA,SAAS,EAAES,SAHb;AAIE,UAAA,YAAY,EAAEC,YAJhB;AAKE,UAAA,aAAa,EAAEI;AALjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAhDQjB,G;;KAAAA,G;AAgDR;AAED,eAAeA,GAAf","sourcesContent":["import React, { useState , useEffect } from 'react';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport NavBar from './NavBar';\nimport Routes from './Routes';\nimport JoblyApi from './api';\n\nfunction App() {\n  const [ companies, setCompanies ] = useState([]);\n  const [ jobs, setJobs ] = useState([]);\n  const emptyUserData = { username: '', hashedPassword: '', firstName: '', lastName: '', email: '', isAdmin: ''}\n  const [ userToken, setUserToken ] = useState('');\n  const [ user, setUser ] = useState(emptyUserData);\n  const [ isLoggedIn, setIsLoggedIn ] = useState(false);\n  \n  useEffect( () => {\n    const getCompanies = async () => {\n      const allCompanies = await JoblyApi.getAllCompanies();\n      setCompanies(allCompanies);\n    }\n\n    const getJobs = async () => {\n      const allJobs = await JoblyApi.getAllJobs();\n      setJobs(allJobs);\n    }\n\n    getCompanies();\n    getJobs();\n  }, []);\n\n  useEffect( () => {\n    const logout = () => {\n      setUserToken('');\n      setUser(emptyUserData);\n    };\n\n    if (isLoggedIn) logout();\n  }, [isLoggedIn]);\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <NavBar userToken={userToken} />\n        <main>\n          <Routes \n            companies={companies} \n            jobs={jobs} \n            userToken={userToken}\n            setUserToken={setUserToken}\n            setIsLoggedIn={setIsLoggedIn} \n          />\n        </main>\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}