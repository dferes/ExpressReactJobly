{"ast":null,"code":"var _jsxFileName = \"/home/__NORI__/Documents/Springboard/43/react_jobly/jobly/src/JobList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Job from './Job';\nimport JoblyApi from './api';\nimport { Button } from 'reactstrap';\nimport './JobList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst JobList = ({\n  jobs\n}) => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    title: ''\n  });\n  const [jobList, setJobList] = useState(jobs);\n  const [isEmpty, setIsEmpty] = useState(false);\n\n  const handleChange = evt => {\n    const {\n      name,\n      value\n    } = evt.target;\n    setFormData(data => ({ ...data,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n    const res = formData.title !== '' ? await JoblyApi.getAllJobs(formData) : jobs;\n    setIsEmpty(res.length === 0 ? true : false);\n    setJobList(res);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-form-div\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"job-title-search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"job-title-search-input\",\n          id: \"job-title-search\",\n          name: \"title\",\n          placeholder: \"Enter a serch term...\",\n          value: formData.title,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"job-title-search-button\",\n          color: \"primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), !isEmpty && jobs.map(job => /*#__PURE__*/_jsxDEV(Job, {\n      id: job.id,\n      title: job.title,\n      companyHandle: job.companyHandle,\n      salary: job.salary,\n      equity: job.equity\n    }, job.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(JobList, \"bnzPMuW5a0kKUppqjznwBZSMa8o=\");\n\n_c = JobList;\nexport default JobList;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobList\");","map":{"version":3,"sources":["/home/__NORI__/Documents/Springboard/43/react_jobly/jobly/src/JobList.js"],"names":["React","useState","Job","JoblyApi","Button","JobList","jobs","formData","setFormData","title","jobList","setJobList","isEmpty","setIsEmpty","handleChange","evt","name","value","target","data","handleSubmit","preventDefault","res","getAllJobs","length","map","job","id","companyHandle","salary","equity"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,QAAP,MAAqB,OAArB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,OAAO,eAAP;;;AAGA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AAE5B,QAAM,CAAEC,QAAF,EAAYC,WAAZ,IAA4BP,QAAQ,CAAC;AAAEQ,IAAAA,KAAK,EAAE;AAAT,GAAD,CAA1C;AACA,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BV,QAAQ,CAACK,IAAD,CAAxC;AACA,QAAM,CAAEM,OAAF,EAAWC,UAAX,IAA0BZ,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMa,YAAY,GAAGC,GAAG,IAAI;AAC1B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,GAAG,CAACG,MAA5B;AACAV,IAAAA,WAAW,CAAEW,IAAI,KAAK,EAAC,GAAGA,IAAJ;AAAU,OAACH,IAAD,GAAQC;AAAlB,KAAL,CAAN,CAAX;AACD,GAHD;;AAKA,QAAMG,YAAY,GAAG,MAAML,GAAN,IAAa;AAChCA,IAAAA,GAAG,CAACM,cAAJ;AACA,UAAMC,GAAG,GAAGf,QAAQ,CAACE,KAAT,KAAmB,EAAnB,GACV,MAAMN,QAAQ,CAACoB,UAAT,CAAoBhB,QAApB,CADI,GAERD,IAFJ;AAGAO,IAAAA,UAAU,CAAES,GAAG,CAACE,MAAJ,KAAe,CAAf,GAAmB,IAAnB,GAAyB,KAA3B,CAAV;AACAb,IAAAA,UAAU,CAACW,GAAD,CAAV;AACD,GAPD;;AASA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAM,QAAA,QAAQ,EAAEF,YAAhB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,SAAS,EAAC,wBADZ;AAEE,UAAA,EAAE,EAAC,kBAFL;AAGE,UAAA,IAAI,EAAC,OAHP;AAIE,UAAA,WAAW,EAAC,uBAJd;AAKE,UAAA,KAAK,EAAEb,QAAQ,CAACE,KALlB;AAME,UAAA,QAAQ,EAAEK;AANZ;AAAA;AAAA;AAAA;AAAA,gBAFF,eAUE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,yBAAlB;AAA4C,UAAA,KAAK,EAAC,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAeI,CAACF,OAAD,IAAYN,IAAI,CAACmB,GAAL,CAAUC,GAAG,iBACzB,QAAC,GAAD;AAEE,MAAA,EAAE,EAAEA,GAAG,CAACC,EAFV;AAGE,MAAA,KAAK,EAAED,GAAG,CAACjB,KAHb;AAIE,MAAA,aAAa,EAAEiB,GAAG,CAACE,aAJrB;AAKE,MAAA,MAAM,EAAEF,GAAG,CAACG,MALd;AAME,MAAA,MAAM,EAAEH,GAAG,CAACI;AANd,OACOJ,GAAG,CAACC,EADX;AAAA;AAAA;AAAA;AAAA,YADY,CAfhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CAhDD;;GAAMtB,O;;KAAAA,O;AAkDN,eAAeA,OAAf","sourcesContent":["import React, { useState } from 'react';\nimport Job from './Job';\nimport JoblyApi from './api';\nimport { Button } from 'reactstrap';\nimport './JobList.css';\n\n\nconst JobList = ({ jobs }) => {\n\n  const [ formData, setFormData ] = useState({ title: ''});\n  const [ jobList, setJobList ] = useState(jobs);\n  const [ isEmpty, setIsEmpty ] = useState(false);\n  \n  const handleChange = evt => {\n    const { name, value } = evt.target;  \n    setFormData( data => ({...data, [name]: value}));\n  };\n  \n  const handleSubmit = async evt => {\n    evt.preventDefault();  \n    const res = formData.title !== '' ?\n      await JoblyApi.getAllJobs(formData)\n      : jobs;\n    setIsEmpty( res.length === 0 ? true: false); \n    setJobList(res);\n  };\n\n  return (\n    <div>\n      <div className='job-form-div'>\n        <form onSubmit={handleSubmit}>\n          <label htmlFor='job-title-search' />\n          <input \n            className='job-title-search-input'\n            id='job-title-search'\n            name='title'\n            placeholder='Enter a serch term...'\n            value={formData.title}\n            onChange={handleChange}\n          />\n          <Button className='job-title-search-button' color='primary'>Submit</Button>    \n        </form>\n      </div>    \n      { !isEmpty && jobs.map( job => (\n        <Job \n          key={job.id}\n          id={job.id}\n          title={job.title}\n          companyHandle={job.companyHandle}\n          salary={job.salary}\n          equity={job.equity}\n        />\n      ))}  \n    </div>  \n  );\n};\n\nexport default JobList;"]},"metadata":{},"sourceType":"module"}